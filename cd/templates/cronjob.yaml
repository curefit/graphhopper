{{- if eq .Values.deployScalingOnly.enabled "false"}}
{{- if .Values.cronjob }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ default .Values.appName .Values.cronjob.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ template "name" . }}
    namespace: {{ .Release.Namespace }}
    billing: {{ .Values.cronjob.labels.billing }}
    sub-billing: {{ index .Values "cronjob" "labels" "sub-billing" }}
    version: default
    env: {{ default "stage" .Values.appEnv }}
    chart: {{ .Chart.Name }}
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  concurrencyPolicy: {{ default "Allow" .Values.cronjob.concurrencyPolicy }}
  failedJobsHistoryLimit: {{ default 1 .Values.cronjob.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ default 3 .Values.cronjob.successfulJobsHistoryLimit }}
  startingDeadlineSeconds: {{ default 600 .Values.cronjob.startingDeadlineSeconds }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: {{ template "name" . }}
{{- if .Values.cronjob.podAnnotations }}
          annotations:
{{ toYaml .Values.cronjob.podAnnotations | indent 12 }}
{{- end }}
        spec:
          activeDeadlineSeconds: {{ default 3600 .Values.cronjob.activeDeadlineSeconds }}
          restartPolicy: OnFailure
        {{- if eq (default "spot" .Values.cronjob.nodeSelector) "od" }}
          nodeSelector:
            spotinst.io/node-lifecycle: od
          tolerations:
          - effect: NoSchedule
            key: onDemand
            operator: Equal
            value: "true"
        {{- end }}
          containers:
            - name: {{ template "name" . }}
              image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
              lifecycle:                 
                preStop:                   
                  exec:                    
                    command:               
                    - sh
                    - -c
                    - "{{ default "echo Done" .Values.cronjob.preStopCommand}} && sleep {{ default 120 .Values.cronjob.drainTime }}"
              env:
              - name: DD_AGENT_HOST
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
              - name: NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: HOST_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.hostIP
              envFrom:
              - configMapRef:
                  name: {{ template "name" . }}-env-config-map
              imagePullPolicy: IfNotPresent
              terminationMessagePath: "/logs/{{ default .Values.appName .Values.cronjob.logDir }}/termination.log"
              terminationMessagePolicy: "FallbackToLogsOnError"
              resources:
{{ toYaml .Values.cronjob.resources | indent 16 }}
      
---   
{{- end }}
{{- end }}