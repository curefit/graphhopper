<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.graphhopper.routing.AStarTest" time="0.185" tests="112" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib"/>
    <property name="java.vm.version" value="25.171-b11"/>
    <property name="gopherProxySet" value="false"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/Users/shivek.sacklecha/Desktop/curefit/graphhopper"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="IN"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/Users/shivek.sacklecha/Desktop/curefit/graphhopper"/>
    <property name="java.runtime.version" value="1.8.0_171-b11"/>
    <property name="java.awt.graphicsenv" value="sun.awt.CGraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/endorsed"/>
    <property name="os.arch" value="x86_64"/>
    <property name="java.io.tmpdir" value="/var/folders/cb/s11nlhrd7q9740z6rjd1fz3xjg446p/T/"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Mac OS X"/>
    <property name="classworlds.conf" value="/usr/local/Cellar/maven/3.5.4/libexec/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/Users/shivek.sacklecha/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:."/>
    <property name="maven.conf" value="/usr/local/Cellar/maven/3.5.4/libexec/conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.13.3"/>
    <property name="library.jansi.path" value="/usr/local/Cellar/maven/3.5.4/libexec/lib/jansi-native"/>
    <property name="user.home" value="/Users/shivek.sacklecha"/>
    <property name="user.timezone" value="Asia/Kolkata"/>
    <property name="java.awt.printerjob" value="sun.lwawt.macosx.CPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="shivek.sacklecha"/>
    <property name="java.class.path" value="/usr/local/Cellar/maven/3.5.4/libexec/boot/plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher clean install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.lwawt.macosx.LWCToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_171"/>
    <property name="java.ext.dirs" value="/Users/shivek.sacklecha/Library/Java/Extensions:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/ext:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java"/>
    <property name="sun.boot.class.path" value="/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_171.jdk/Contents/Home/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/local/Cellar/maven/3.5.4/libexec"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeBig"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testCalcFastestPath[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testBidirectional[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testWikipediaShortestPath[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testCreateAlgoTwice[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testDirectedGraphBug1[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testDirectedGraphBug2[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.004"/>
  <testcase name="testMultipleVehicles_issue548[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testBidirectionalLinear[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testViaEdges_WithCoordinates[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testCannotCalculateSP[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testViaEdges_FromEqualsTo[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.003"/>
  <testcase name="testTwoWeightsPerEdge[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.003"/>
  <testcase name="test0SpeedButUnblocked_Issue242[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0"/>
  <testcase name="testNoPathFound[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.004"/>
  <testcase name="testCalcFootPath[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testQueryGraphAndFastest[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.003"/>
  <testcase name="testViaEdges_SpecialCases[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testCalcShortestPath_sourceEqualsTarget[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testBidirectional2[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.003"/>
  <testcase name="testCalcShortestPath[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testViaEdges_BiGraph[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.004"/>
  <testcase name="testCalcIfEmptyWay[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testSimpleAlternative[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testWithCoordinates[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testRekeyBugOfIntBinHeap[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testCalcIf1EdgeAway[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testMaxVisitedNodes[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testTwoWeightsPerEdge2[NODE_BASED]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testCalcFastestPath[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.003"/>
  <testcase name="testBidirectional[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testWikipediaShortestPath[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testCreateAlgoTwice[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0"/>
  <testcase name="testDirectedGraphBug1[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testDirectedGraphBug2[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testMultipleVehicles_issue548[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testBidirectionalLinear[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testViaEdges_WithCoordinates[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testCannotCalculateSP[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testViaEdges_FromEqualsTo[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.004"/>
  <testcase name="testTwoWeightsPerEdge[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0"/>
  <testcase name="test0SpeedButUnblocked_Issue242[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testNoPathFound[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.004"/>
  <testcase name="testCalcFootPath[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testQueryGraphAndFastest[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testViaEdges_SpecialCases[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.005"/>
  <testcase name="testCalcShortestPath_sourceEqualsTarget[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0"/>
  <testcase name="testBidirectional2[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0"/>
  <testcase name="testCalcShortestPath[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testViaEdges_BiGraph[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testCalcIfEmptyWay[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testSimpleAlternative[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testWithCoordinates[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testRekeyBugOfIntBinHeap[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testCalcIf1EdgeAway[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testMaxVisitedNodes[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testTwoWeightsPerEdge2[EDGE_BASED_1DIR]" classname="com.graphhopper.routing.AStarTest" time="0.003"/>
  <testcase name="testCalcFastestPath[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testBidirectional[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testWikipediaShortestPath[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testCreateAlgoTwice[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testDirectedGraphBug1[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testDirectedGraphBug2[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testMultipleVehicles_issue548[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.003"/>
  <testcase name="testBidirectionalLinear[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testViaEdges_WithCoordinates[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testCannotCalculateSP[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testViaEdges_FromEqualsTo[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testTwoWeightsPerEdge[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="test0SpeedButUnblocked_Issue242[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testNoPathFound[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.004"/>
  <testcase name="testCalcFootPath[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testQueryGraphAndFastest[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testViaEdges_SpecialCases[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testCalcShortestPath_sourceEqualsTarget[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testBidirectional2[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testCalcShortestPath[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testViaEdges_BiGraph[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testCalcIfEmptyWay[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0"/>
  <testcase name="testSimpleAlternative[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testWithCoordinates[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testRekeyBugOfIntBinHeap[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testCalcIf1EdgeAway[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testMaxVisitedNodes[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testTwoWeightsPerEdge2[EDGE_BASED_2DIR]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testCalcFastestPath[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.003"/>
  <testcase name="testBidirectional[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testWikipediaShortestPath[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0"/>
  <testcase name="testCreateAlgoTwice[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testDirectedGraphBug1[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testDirectedGraphBug2[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testMultipleVehicles_issue548[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testBidirectionalLinear[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testViaEdges_WithCoordinates[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testCannotCalculateSP[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testViaEdges_FromEqualsTo[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testTwoWeightsPerEdge[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="test0SpeedButUnblocked_Issue242[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testNoPathFound[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.004"/>
  <testcase name="testCalcFootPath[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testQueryGraphAndFastest[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testViaEdges_SpecialCases[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.003"/>
  <testcase name="testCalcShortestPath_sourceEqualsTarget[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testBidirectional2[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testCalcShortestPath[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testViaEdges_BiGraph[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testCalcIfEmptyWay[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testSimpleAlternative[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testWithCoordinates[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testRekeyBugOfIntBinHeap[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testCalcIf1EdgeAway[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
  <testcase name="testMaxVisitedNodes[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.002"/>
  <testcase name="testTwoWeightsPerEdge2[EDGE_BASED_2DIR_UTURN]" classname="com.graphhopper.routing.AStarTest" time="0.001"/>
</testsuite>